<?php
/************************************************************************************
 *
 *  Copyright (c) 2018 Thanasis Vergoulis & Konstantinos Zagganas &  Loukas Kavouras
 *  for the Information Management Systems Institute, "Athena" Research Center.
 *  
 *  This file is part of SCHeMa.
 *  
 *  SCHeMa is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  SCHeMa is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with Foobar.  If not, see <https://www.gnu.org/licenses/>.
 *
 ************************************************************************************/
namespace app\models;

use components\Mailer;
use app\models\TicketConfig;
// use ricco\ticket\Module;
use Yii;
use app\models\User;

/**
 * This is the model class for table "ticket_body".
 *
 * @property integer      $id
 * @property integer      $id_head
 * @property integer      $client
 * @property string       $name_user
 * @property string       $text
 * @property string       $date
 *
 * @property TicketFile   $file
 * @property TicketHead[] $ticketHeads
 */
class TicketBody extends \yii\db\ActiveRecord
{
    /** @var  Module */
    private $module;

    const ADMIN = 1;
    
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%ticket_body}}';
    }

    // public function init()
    // {
    //     // $this->module = new TicketConfig;
    //     parent::init(); // TODO: Change the autogenerated stub
    // }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['text'], 'required'],
            [['text'], 'string'],
            [['date', 'name_user', 'id_head'], 'safe'],
            [['name_user'], 'string', 'max' => 255],
            [['name_user', 'text'], 'filter', 'filter' => 'strip_tags'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id'        => 'ID',
            'name_user' => 'Username',
            'text'      => 'Message',
            'date'      => 'Date',
        ];
    }

    /**
     * Перед сохранением указываем имя пользователя который делает ответ
     * Если ответ пишет администратор, делаем соответствующий статус
     *
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        $this->name_user = Yii::$app->user->identity['username'];
        if (in_array(Yii::$app->user->identity->getId(), User::getAdminIds())) {
            $this->client = self::ADMIN;
        }

        /** @var TicketHead $ticketHead */
        $ticketHead = TicketHead::find()->where("id = " . $this->id_head)->one();

        /**
         * Отправка уведомлений
         */
        if (TicketConfig::mailSend !== false && $ticketHead->status != TicketHead::CLOSED) {
            $userModel = User::$user;
            (new Mailer())
                ->sendMailDataTicket($ticketHead->topic, $ticketHead->status, $ticketHead->id,
                    $this->text)
                ->setDataFrom($this->client == null ? Yii::$app->params['adminEmail'] : $userModel::findOne([
                    'id' => $ticketHead->user_id,
                ])['email'],
                    TicketConfig::subjectAnswer
                )
                ->senda('mail');
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function getFile()
    {
        return $this->hasMany(TicketFile::class, ['id_body' => 'id']);
    }
}

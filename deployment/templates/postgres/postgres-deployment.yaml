apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.app_name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.postgres.app_name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.app_name }}
    spec:
      {{- if not (hasPrefix "centos" .Values.postgres.deployment.image) }}
      initContainers:
      - name: volume-permissions
        image: busybox
        command: ["chown", "-R", "999:999", "/var/lib/postgresql/data"]
        securityContext:
          runAsUser: 0
        volumeMounts:
          - name: postgres-volume
            mountPath: /var/lib/postgresql/data
      {{- end }}
      containers:
      - image: {{ .Values.postgres.deployment.image }}
        name: postgres
        env:
          - name: {{ include "deployment.postgresql_user" . }}
            value: {{ .Values.postgres.deployment.dbUsername }}
          - name: {{ include "deployment.postgresql_password" . }}
            value: {{ .Values.postgres.deployment.dbPassword }}
          - name: {{ include "deployment.postgresql_database" . }}
            value: {{ .Values.postgres.deployment.dbName }}
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-volume
      volumes:
        - name: postgres-volume
          persistentVolumeClaim:
            claimName: {{ .Values.postgres.volume.name }}
      restartPolicy: Always

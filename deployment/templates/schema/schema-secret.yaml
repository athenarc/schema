apiVersion: v1
stringData:
  configuration.json: "{\n\t\n\t\"registry\": \"{{ .Values.registry.url }}\",\n\t\"registryAuth\":\n\t{\n\t\t\"username\":\"{{ .Values.registry.deployment.username }}\",\n\t\t\"password\": \"{{ .Values.registry.deployment.password }}\"\n\t},\n\t\"database\": \n\t{\n\t\t\"host\":\"postgres\",\n\t\t\"username\":\"{{ .Values.postgres.deployment.dbUsername }}\",\n\t\t\"password\": \"{{ .Values.postgres.deployment.dbPassword }}\",\n\t\t\"database\": \"{{ .Values.postgres.deployment.dbName }}\"\n\t},\n\t\"localftp\":\n\t{\n\t\t\"domain\":\"ftp\",\n\t\t\"username\": \"{{ .Values.ftp.deployment.username }}\",\n\t\t\"password\": \"{{ .Values.ftp.deployment.password }}\"\n\t},\n\t\"imagePullSecrets\":\n\t[\n\t\t{\"name\":\"registry-creds\"}\n\t],\n\t\"ftp-creds\":\n\t{\n\t\t\"ftp\":\n\t\t{\n\t\t\t\"username\":\"{{ .Values.ftp.deployment.username }}\",\n\t\t\t\"password\": \"{{ .Values.ftp.deployment.password }}\"\n\t\t}\n\t},\n\t\"namespaces\":\n\t{\n\t\t\"registry\":\"schema\",\n\t\t\"jobs\":\"schema\",\n\t\t\"tesk\": \"tesk\"\n\t}\n}"
  db.php: |
    <?php

    return [
        'class' => 'yii\db\Connection',
        'dsn' => 'pgsql:host=postgres;dbname={{ .Values.postgres.deployment.dbName }}',
        'username' => '{{ .Values.postgres.deployment.dbUsername }}',
        'password' => '{{ .Values.postgres.deployment.dbPassword }}',
        'charset' => 'utf8',

        // Schema cache options (for production environment)
        //'enableSchemaCache' => true,
        //'schemaCacheDuration' => 60,
        //'schemaCache' => 'cache',
    ];
  params.php: |
    <?php

    return [
        /*
         * The following parameters must be left unchanged
         */
        'bsDependencyEnabled' => false,
        'adminEmail' => 'admin@example.com',
        'userDataPath' => '/data/docker/user-data/',
        'tmpFolderPath' => '/data/docker/tmp/',
        'ROCratesFolder' => '/data/docker/RO-crates/',
        'profilesFolderPath' => '/data/docker/profiles',
        'tmpImagePath' => '/data/docker/tmp-images/',
        'tmpWorkflowPath' => '/data/docker/workflows/',
        'scriptsFolder' => '/app/web/schema/scheduler_files/',
        'workflowsFolder' => '/data/docker/workflows',
        'archivedWorkflowsFolder' => '/data/docker/archived_workflows',
        'systemUser' => 'root',
        'nfsIp' => '{{ .Values.nfsIp }}',
        /*
         * Change the following parameters according to your installation
         */
        'ftpIp' => 'ftp',
        'teskEndpoint' => '{{ .Values.tesk.url }}',
        'wesEndpoint' => '{{ .Values.wes.url }}',
        'standalone' => {{ .Values.standalone.isStandalone }},
        'standaloneResources'=>
        [
            'maxCores'=> {{ .Values.standalone.resources.maxCores }},
            'maxRam' => {{ .Values.standalone.resources.maxRam }},
        ],
        'classifierMemLimit'=>8,
        'metrics_url' => '{{ .Values.metrics.url }}',
        'namespaces' => [
            'jobs'=>'schema'
        ]



    ];

    ?>
kind: Secret
metadata:
  name: schema-config
type: Opaque
